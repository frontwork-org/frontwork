{
  "version": 3,
  "sources": ["../../utils.ts", "../../frontwork.ts", "../../frontwork-client.ts", "../i18n/english.json", "../i18n/german.json", "../test.i18n.ts", "../test.routes.ts", "../test.client.ts"],
  "sourcesContent": ["import { FW, LogType } from './frontwork.ts';\n\n\nexport function parse_url(url:string): {protocol:string, host:string, path:string, query_string:string, fragment:string} {\n    const url_protocol_split = url.split(\"://\");\n    if(url_protocol_split.length < 2) throw new Error(\"Invalid URL: \" + url);\n\n    const protocol = url_protocol_split[0]+\":\";\n\n    const url_querystring_split = url_protocol_split[1].split(\"?\");\n    const url_host_path_split = url_querystring_split[0].split(\"/\");\n\n    const host = url_host_path_split[0];\n\n    let path;\n    if (url_host_path_split.length < 2) {\n        path = \"/\";\n    } else {\n        path = \"\";\n        for (let i = 1; i < url_host_path_split.length; i++) {\n            path += \"/\" + url_host_path_split[i];\n        }\n    }\n\n    let query_string;\n    let fragment;\n    if (url_querystring_split.length > 1) {\n        const query_string_fragment_split = url_querystring_split[1].split(\"#\");\n        query_string = query_string_fragment_split[0];\n\n        fragment = query_string_fragment_split.length > 1 ? query_string_fragment_split[1] : \"\";\n    } else {\n        query_string = \"\";\n        fragment = \"\";\n    }\n\n    return {\n        protocol: protocol,\n        host: host,\n        path: path,\n        query_string: query_string,\n        fragment: fragment,\n    };\n}\n\n\nexport function key_value_list_to_object(list: string, list_delimiter: string, key_value_delimiter: string): { [key: string]: string } {\n    const result: { [key: string]: string } = {};\n\n    const list_split = list.split(list_delimiter);\n    for (let i = 0; i < list_split.length; i++) {\n        const item = list_split[i];\n        const item_split: string[] = item.split(key_value_delimiter);\n        if (item_split[0] !== \"\") {\n            if (item_split.length === 2) {\n                result[item_split[0]] = item_split[1];\n            } else {\n                result[item_split[0]] = \"\";\n            }\n        }\n    }\n    return result;\n}\n\nexport function html_element_set_attributes(html_element: HTMLElement, attributes: NamedNodeMap) {\n    for (let i = 0; i < attributes.length; i++) {\n        const attribute = attributes[i];\n        html_element.setAttribute(attribute.name, attribute.value);\n    }\n}\n\nexport type Result<T, E> = {\n    ok: true;\n    val: T;\n} | {\n    ok: false;\n    err: E;\n};\n\nexport interface ObserverFunction<T> {\n    (value: Result<T, Error>): void;\n}\n\nexport interface ObserverRetrieverFunction<T> {\n    (): Promise<Result<T, Error>>;\n}\n\n/**\n * Observers may execute their function multiple times then the notify method gets called.\n */\n export class Observer<T> {\n    private observers: ObserverFunction<T>[] = [];\n    private retriever: ObserverRetrieverFunction<T>|null = null;\n    private value: Result<T, Error>|null = null;\n    private retriever_listeners: (() => void)[] = [];\n    renew_is_running = false;\n\n    // Set the retriever function that will be used in the get function\n    define_retriever(retriever: ObserverRetrieverFunction<T>) {\n        this.retriever = retriever;\n    }\n\n    // Remove the retriever function\n    remove_retriever() {\n        this.retriever = null;\n    }\n\n    // Observer listener\n    subscribe(fn: ObserverFunction<T>): void {\n        if (this.value !== null) fn(this.value);\n        this.observers.push(fn);\n    }\n    unsubscribe(fn: ObserverFunction<T>): void {\n        this.observers = this.observers.filter(observer => observer !== fn);\n    }\n\n    /**\n     * Retriever listener: executed before the retriever starts\n     */\n    add_retriever_listener(fn: () => void): void {\n        this.retriever_listeners.push(fn);\n    }\n    remove_retriever_listener(fn: () => void): void {\n        this.retriever_listeners = this.retriever_listeners.filter(listeners => listeners !== fn);\n    }\n\n    // Notify all observers with a value\n    set(value: Result<T, Error>): void {\n        this.value = value;\n        this.observers.forEach(observer => observer(value));\n    }\n\n    // Notify all observers with a value\n    set_value(value: T): void {\n        this.set({ ok: true, val: value });\n    }\n\n    // Set value to null. DOES NOT NOTIFY.\n    set_null(): void {\n        this.value = null;\n    }\n\n    /**\n     * Returns true if value is null\n     */\n    is_null(): boolean {\n        return this.value === null;\n    }\n\n    // Notify all observers with a value if value is unknown\n    set_once(value: T): void {\n        if (this.value === null) {\n            this.set({ ok: true, val: value });\n        }\n    }\n\n    // Get the value as Promise by this.value, with the retriever or by subscribe and unsubscribe\n    get(): Promise<T> {\n        return new Promise((resolve, reject) => {\n            if (this.value === null) {\n                if (this.retriever === null || this.renew_is_running) {\n                    // Get the value by subscribe and unsubscribe\n                    const sub: ObserverFunction<T> = (value: Result<T, Error>) => {\n                        if (value.ok) {\n                            resolve(value.val);\n                        } else {\n                            reject(value.err);\n                        }\n                        this.unsubscribe(sub);\n                    };\n                    this.subscribe(sub);\n                } else {\n                    // Get the value using the retriever\n                    this.get_renew()\n                        .then((value) => resolve(value))\n                        .catch((error) => reject(error));\n                }\n            } else {\n                if (this.value.ok) {\n                    resolve(this.value.val);\n                } else {\n                    reject(this.value.err);\n                }\n            }\n        });\n    }\n\n    // Fix the get_renew method\n    get_renew(): Promise<T> {\n        return new Promise(async (resolve, reject) => {\n            if (this.renew_is_running) {\n                const sub: ObserverFunction<T> = (value: Result<T, Error>) => {\n                    if (value.ok) {\n                        resolve(value.val);\n                    } else {\n                        reject(value.err);\n                    }\n                    this.unsubscribe(sub);\n                };\n                this.subscribe(sub);\n            } else {\n                const result = await this.renew();\n                if (result.ok) {\n                    resolve(result.val);\n                } else {\n                    reject(result.err);\n                }\n            }\n        });\n    }\n\n    // Fix the renew method\n    renew(): Promise<Result<T, Error>> {\n        return new Promise(async (resolve, reject) => {\n            if (this.retriever === null) {\n                reject(new Error(\"For Observer.renew() the retriever must be defined\"));\n                return;\n            }\n\n            this.renew_is_running = true;\n            this.retriever_listeners.forEach(listener => listener());\n\n            try {\n                const value = await this.retriever();\n                this.set(value);\n                this.renew_is_running = false;\n\n                if (value.ok) {\n                    resolve(value);\n                } else {\n                    FW.reporter(LogType.Error, \"Observer\", \"ERROR executing Observer.retriever()\", null, value.err);\n                    resolve(value); // Still resolve with the error result\n                }\n            } catch (error) {\n                this.renew_is_running = false;\n                const errorResult: Result<T, Error> = {\n                    ok: false,\n                    err: error instanceof Error ? error : new Error(String(error))\n                };\n                reject(errorResult);\n            }\n        });\n    }\n\n    // Get the current number of observers\n    get count(): number {\n        return this.observers.length;\n    }\n\n    // Clear all observers\n    clear(): void {\n        this.observers = [];\n        this.value = null;\n    }\n}\n", "import { parse_url, key_value_list_to_object, Observer, Result, ObserverRetrieverFunction } from \"./utils.ts\";\nimport { FrontworkClient } from './frontwork-client.ts'\n\n\nexport enum LogType {\n    Info,\n    Warn,\n    Error,\n}\n\nexport const FW =  {\n    /**\n     * Is false if dom.ts / frontwork-service.ts / frontwork-testworker.ts has been imported\n     */\n    is_client_side: true,\n    \n    /**\n     * If true the default reporter will sent some client logs to the dev server\n     */\n    reporter_client_to_server: true,\n    \n    /**\n     * IF true FW.reporter will not be be called on LogType.Info.\n     * Warn and Error messages will always be reported.\n     */\n    verbose_logging: false,\n    \n    /**\n     * To enable a bug reporter for staging and production you can modify FW.reporter, that it sents a request to the backend\n     * @param log_type: LogType \n     * @param category: string \n     * @param text: string\n    */\n    // deno-lint-ignore no-unused-vars\n    reporter: function(log_type: LogType, category: string, text: string, context: FrontworkContext|null, error: Error|null) {\n        if (FW.reporter_client_to_server && FW.is_client_side) {\n            fetch(location.protocol+\"//\"+location.host+\"//dr\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                  },\n                body: JSON.stringify({ report_text: text })\n            });\n        }\n\n        if (log_type === LogType.Error) {\n            if(error === null) console.error(text);\n            else console.error(text, error);\n        } else if(log_type === LogType.Warn) {\n            console.warn(text);\n        } else if(log_type === LogType.Info) {\n            console.log(text);\n        }\n    }\n}\n\n\n/**\n * Utility functions for DOM element manipulation.\n * Some methods will only execute if do_building is true\n */\nexport class HTMLElementWrapper<T extends HTMLElement> {\n    readonly element: T;\n    readonly created_element: boolean; // true if element was created; Otherwise false the element already exists\n\n    constructor(element: T, created_element: boolean) {\n        this.element = element;\n        this.created_element = created_element;\n    }\n\n    prepend_to(parent: HTMLElementWrapper<HTMLElement>): this {\n        if(this.created_element) parent.element.prepend(this.element);\n        return this;\n    }\n\n    append_to(parent: HTMLElementWrapper<HTMLElement>): this {\n        if(this.created_element) parent.element.append(this.element);\n        return this;\n    }\n\n    replace_text(search: string, replace: string) {\n        this.element.innerText = this.element.innerText.split(search).join(replace);\n    }\n\n    replace_html(search: string, replace: string) {\n        this.element.innerHTML = this.element.innerHTML.split(search).join(replace);\n    }\n\n    then(runnable: () => void) {\n        if(this.created_element) runnable();\n    }\n\n    show() {\n        const attr_value = this.element.getAttribute(\"style\");\n        if (attr_value) this.element.setAttribute(\"style\", attr_value.replace(\"display: none;\", \"\"));\n    }\n\n    hide() {\n        const current_style = this.element.getAttribute(\"style\");\n        if (current_style === null) {\n            this.element.setAttribute(\"style\", \"display: none;\");\n        } else {\n            if(!current_style.includes(\"display: none;\")) this.element.setAttribute(\"style\", current_style + \" display: none;\");\n        }\n    }\n}\n\n/**\n * Importent: action must be \"\" or beginn with a slash\n */\nexport class FrontworkForm extends HTMLElementWrapper<HTMLFormElement> {\n    constructor(context: FrontworkContext, id: string, action: string, method: string) {\n        super(context.ensure_element(\"form\", id, { action: action, method: method }).element, context.do_building);\n        this.element.setAttribute(\"fw-form\", \"1\");\n    }\n}\n\n\nexport enum EnvironmentPlatform {\n    Web,\n    Desktop,\n    Android,\n}\n\nexport enum EnvironmentStage {\n    Development,\n    Staging,\n    Production,\n}\n\nexport type I18n = I18nLocale[];\n\nexport class I18nLocale {\n    locale: string;\n    translations: I18nLocaleTranslation;\n\n    constructor(locale: string, translations: I18nLocaleTranslation) {\n        this.locale = locale;\n        this.translations = translations;\n    }\n\n    get_translation(id: string): string {\n        const translation = this.translations[id];\n\n        if(translation === undefined) {\n            FW.reporter(LogType.Error, \"I18n\", \"    Missing translation for the locale '\"+this.locale+\"': ,\\\"\"+id+\"\\\": \\\"translated_text\\\"\", null, null);\n            return \"\";\n        }\n\n        return translation;\n    }\n}\n\nexport type I18nLocaleTranslation = { [key: string]: string };\n\nexport type ScopeItems = { [key: string]: string };\n\nclass Scope {\n    items: ScopeItems;\n    constructor(items: ScopeItems) {\n        this.items = items;\n    }\n\n    get(key: string): string|null {\n        const value = this.items[key]\n        if(value === undefined) return null;\n        return value;\n    }\n\n    forEach(callback: (key: string, value: string) => void): void {\n        Object.entries(this.items).forEach(([key, value]) => {\n            callback(key, value);\n        });\n    }\n}\n\nexport class GetScope extends Scope { constructor(items: ScopeItems) { super(items); } }\nexport class PostScope extends Scope {\n    constructor(items: ScopeItems) { super(items); }\n\t\n    /** Retrieve the POST data from a Request object and set it to PostScope.items */\n    async from_request(_request: Request) {\n        let content_type = _request.headers.get(\"content-type\");\n        if (content_type !== null) {\n            content_type = content_type.split(\";\")[0];\n            \n            if (_request.body !== null) {\n                if (content_type === \"application/x-www-form-urlencoded\") {\n                    const reader = _request.body.getReader();\n                    if (reader !== null) {\n                        await reader.read().then((body) => {\n                            if (body.value !== null) {\n                                const body_string = new TextDecoder().decode(body.value);\n                                this.items = key_value_list_to_object(body_string, \"&\", \"=\");\n                            }\n                        });\n                    }\n                } else if(content_type === \"application/json\") {\n                    const reader = _request.body.getReader();\n                    if (reader !== null) {\n                        await reader.read().then((body) => {\n                            if (body.value !== null) {\n                                const body_string = new TextDecoder().decode(body.value);\n                                this.items = JSON.parse(body_string);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n\n        return this;\n\t}\n}\nexport class CookiesScope extends Scope { constructor(items: ScopeItems) { super(items); } }\n\n\nexport class Cookie {\n    name: string;\n    value: string;\n    expires: number|null = null;\n    max_age: number|null = null;\n    domain: string|null = null;\n    path = \"/\";\n    secure = false;\n    http_only = false;\n    same_site: string|null = null;\n\n    constructor(name: string, value: string) {\n        this.name = name;\n        this.value = value;\n    }\n\n    set_expires(expires: number): Cookie { this.expires = expires; return this; }\n    set_max_age(max_age: number): Cookie { this.max_age = max_age; return this; }\n    set_domain(domain: string): Cookie { this.domain = domain; return this; }\n    set_path(path: string): Cookie { this.path = path; return this; }\n    set_secure(secure: boolean): Cookie { this.secure = secure; return this; }\n    set_http_only(http_only: boolean): Cookie { this.http_only = http_only; return this; }\n    set_same_site(same_site: string): Cookie { this.same_site = same_site; return this; }\n\n    to_string(): string {\n        let result = this.name + \"=\" + this.value;\n        if(this.expires !== null) {\n            result += \"; Expires=\" + new Date(this.expires).toUTCString();\n        }\n        if(this.max_age !== null) {\n            result += \"; Max-Age=\" + this.max_age;\n        }\n        if(this.domain !== null) {\n            result += \"; Domain=\" + this.domain;\n        }\n        if(this.path !== \"\") {\n            result += \"; Path=\" + this.path;\n        }\n        if(this.secure) {\n            result += \"; Secure\";\n        }\n        if(this.http_only) {\n            result += \"; HttpOnly\";\n        }\n        if(this.same_site !== null) {\n            result += \"; SameSite=\" + this.same_site;\n        }\n        return result;\n    }\n}\n\n\nexport class FrontworkRequest {\n    public headers: Headers;\n    public method: string;\n    public url: string;\n    public protocol: string;\n    public host: string;\n    public path: string;\n    public path_dirs: string[];\n    public query_string: string;\n    public fragment: string;\n    public readonly GET: GetScope;\n    public readonly POST: PostScope;\n    public readonly COOKIES: CookiesScope;\n\n    constructor(method: string, url: string, headers: Headers, post: PostScope) {\n        const parsed_url = parse_url(url);\n\n        this.headers = headers;\n        this.method = method;\n        this.url = url;\n        this.protocol = parsed_url.protocol;\n        this.host = parsed_url.host;\n        this.path = parsed_url.path;\n        this.path_dirs = decodeURIComponent(parsed_url.path.replace(/\\+/g, '%20')).split(\"/\");\n        this.query_string = parsed_url.query_string;\n        this.fragment = parsed_url.fragment;\n\n        this.GET = new GetScope(\n            key_value_list_to_object(parsed_url.query_string, \"&\", \"=\")\n        );\n\n        this.POST = post;\n\n        const cookies_string = this.headers.get(\"cookie\");\n        this.COOKIES = new CookiesScope(\n            cookies_string === null ? {} : key_value_list_to_object(cookies_string, \"; \", \"=\")\n        );\n    }\n\n    get_domain(): string {\n        return this.host.split(\":\")[0];\n    }\n\n    __request_text(category: string) {\n        let text = this.method + \" \" + this.path;\n        if(this.query_string !== \"\") text += \"?\" + this.query_string;\n        text += \" [\" + category + \"]\";\n\n        const keys = Object.keys(this.POST.items);\n        if (keys.length !== 0) {\n            text += \"\\n    Scope POST: \";\n            keys.forEach((key) => {\n                text += \"\\n        \" + key + \" = \\\"\" + this.POST.items[key] + \"\\\"\";\n            })\n        }\n        return text;\n    }\n\n    log(category: string, context: FrontworkContext|null) {\n        if(FW.verbose_logging) FW.reporter(LogType.Info, category, this.__request_text(category), context, null);\n    }\n    \n    error(category: string, context: FrontworkContext, error: Error) {\n        FW.reporter(LogType.Error, category, this.__request_text(category), context, error);\n    }\n}\n\n\nexport class FrontworkResponse {\n    status_code: number;\n    mime_type = \"text/html\";\n    // content: DocumentBuilderInterface|Blob|string;\n    content: DocumentBuilderInterface|string;\n    headers: string[][] = [];\n    cookies: Cookie[] = [];\n\n    constructor(status_code: number, content: DocumentBuilderInterface|string) {\n        this.status_code = status_code;\n        this.content = content;\n    }\n\n    set_mime_type(mime_type: string) {\n        this.mime_type = mime_type;\n        return this;\n    }\n\n    add_header(name: string, value: string) {\n        this.headers.push([name, value]);\n        return this;\n    }\n\n    get_header(name: string) {\n        for (const header of this.headers) {\n            if (header[0] === name) {\n                return header[1];\n            }\n        }\n        return null;\n    }\n\n    set_cookie(cookie: Cookie) {\n        for (let i = 0; i < this.cookies.length; i++) {\n            if (this.cookies[i].name === cookie.name) {\n                this.cookies[i] = cookie;\n                return this;\n            }\n        }\n        this.cookies.push(cookie);\n        return this;\n    }\n\n    into_response(): Response {\n        const response = new Response(this.content.toString(), { status: this.status_code });\n        response.headers.set('content-type', this.mime_type);\n\n        for (let i = 0; i < this.headers.length; i++) {\n            const header = this.headers[i];\n            response.headers.set(header[0], header[1]);\n        }\n\n        for (let i = 0; i < this.cookies.length; i++) {\n            const cookie = this.cookies[i];\n            response.headers.append('set-cookie', cookie.to_string());\n        }\n\n        return response;\n    }\n}\n\nexport interface DocumentBuilderInterface {\n    readonly context: FrontworkContext;\n    readonly doctype: string;\n    head_append_tag(tag: string, attributes?: { [key: string]: string }): void;\n    add_head_meta_data(title: string, description: string, robots: string): DocumentBuilder;\n    body_append(wr: HTMLElementWrapper<HTMLElement>): void;\n    set_html_lang(code: string): DocumentBuilder;\n    html(): void;\n    toString(): string;\n}\n\nexport class DocumentBuilder implements DocumentBuilderInterface {\n    readonly context: FrontworkContext;\n    readonly doctype: string;\n    \n\n    constructor(context: FrontworkContext) {\n        this.context = context;\n        this.doctype = \"<!DOCTYPE html>\";\n        this.set_html_lang(context.selected_locale.locale);\n    }\n\n    //\n    // Head methods\n    //\n\n    head_append_tag(tag: string, attributes?: { [key: string]: string }) {\n        const element = document.createElement(tag);\n        if (attributes) {\n            for (const key in attributes) {\n                element.setAttribute(key, attributes[key]);\n            }\n        }\n        this.context.document_head.append(element);\n        return this;\n    }\n\n    add_head_meta_data(title: string, description: string, robots: string): DocumentBuilder {\n        const meta_chatset = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_chatset.setAttribute(\"charset\", \"UTF-8\");\n        \n        const meta_compatible = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_compatible.setAttribute(\"http-equiv\", \"X-UA-Compatible\");\n        meta_compatible.setAttribute(\"content\", \"IE=edge\");\n        \n        const meta_viewport = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_viewport.setAttribute(\"name\", \"viewport\");\n        meta_viewport.setAttribute(\"content\", \"width=device-width, initial-scale=1, maximum-scale=1\");\n        \n        const meta_title = this.context.document_head.appendChild( document.createElement(\"title\") );\n        meta_title.innerHTML = title;\n        \n        const meta_description = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_description.setAttribute(\"name\", \"description\");\n        meta_description.setAttribute(\"content\", description);\n        \n        const meta_robots = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_robots.setAttribute(\"name\", \"robots\");\n        meta_robots.setAttribute(\"content\", robots);\n        return this;\n    }\n\n    add_head_meta_opengraph_website(title: string, description: string, url: string, image_url: string): DocumentBuilder {\n        const meta_og_type = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_og_type.setAttribute(\"property\", \"og:type\");\n        meta_og_type.setAttribute(\"content\", \"website\");\n\n        const meta_og_url = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_og_url.setAttribute(\"property\", \"og:url\");\n        meta_og_url.setAttribute(\"content\", url);\n\n        const meta_og_title = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_og_title.setAttribute(\"property\", \"og:title\");\n        meta_og_title.setAttribute(\"content\", title);\n\n        const meta_og_description = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_og_description.setAttribute(\"property\", \"og:description\");\n        meta_og_description.setAttribute(\"content\", description);\n\n        const meta_og_image = this.context.document_head.appendChild( document.createElement(\"meta\") );\n        meta_og_image.setAttribute(\"property\", \"og:image\");\n        meta_og_image.setAttribute(\"content\", image_url);\n\n        return this;\n    }\n\n    //\n    // Body methods\n    //\n\n    set_html_lang(code: string): DocumentBuilder {\n        this.context.document_html.setAttribute(\"lang\", code);\n        return this;\n    }\n\n    body_append(wr: HTMLElementWrapper<HTMLElement>) {\n        this.context.document_body.append(wr.element);\n        return wr;\n    }\n\n    //\n    // Build methods\n    //\n\n    html() {\n        // force adding style.css to the end of the head\n        const style_css = this.context.document_head.appendChild( document.createElement(\"link\") );\n        style_css.setAttribute(\"id\", \"fw-style\");\n        style_css.setAttribute(\"rel\", \"stylesheet\");\n        style_css.setAttribute(\"href\", \"/css/style.css\");\n        style_css.setAttribute(\"type\", \"text/css\");\n\n        // force adding main.client.js to the end of the body\n        const main_js = this.context.document_body.appendChild( document.createElement(\"script\") );\n        main_js.setAttribute(\"id\", \"fw-script\");\n        main_js.setAttribute(\"src\", \"/js/main.client.js\");\n        main_js.setAttribute(\"type\", \"text/javascript\");\n\n        return this.context.document_html;\n    }\n\n    toString() {\n        const html_response = this.html();\n\n        return this.doctype + '\\n' \n            + html_response.outerHTML;\n    }\n}\n\n// Generally you use 301 for redirects, but you use 302 for things that should not be cached like redirects after logins.\nexport class FrontworkResponseRedirect extends FrontworkResponse {\n    constructor(redirect_path: string, status_code: number) {\n        if(FW.verbose_logging) FW.reporter(LogType.Info, \"REDIRECT\", \"    [\"+status_code+\" REDIRECT]-> \"+redirect_path, null, null);\n        \n        super(status_code, \"redirecting...\");\n        this.add_header(\"Location\", redirect_path);\n    }\n}\n\nexport interface BuildEvent {\n    (context: FrontworkContext): Promise<FrontworkResponse>\n}\n\nexport interface DomReadyEvent {\n    (context: FrontworkContext, client: FrontworkClient): void\n}\n\nexport declare interface Component {\n    build: BuildEvent;\n    dom_ready: DomReadyEvent;\n    on_destroy: (context: FrontworkContext, client: FrontworkClient) => void;\n}\n\nexport interface ErrorHandler {\n    (context: FrontworkContext): Promise<FrontworkResponse>\n}\n\nexport declare interface BeforeRouteEvent {\n    build(context: FrontworkContext): Promise<void>;\n    dom_ready: DomReadyEvent;\n}\n\n\nlet previous_route_id = 0;\nexport class Route {\n    public id: number;\n    public path: string;\n    public component: new (context: FrontworkContext) => Component;\n\n    constructor(path: string, component: new (context: FrontworkContext) => Component) {\n        this.path = path;\n        this.component = component;\n        this.id = previous_route_id;\n        previous_route_id += 1;\n    }\n}\n\nexport interface DomainToRouteSelector {\n    (context: FrontworkContext): Promise<Route[]>\n}\n\nexport interface ApiRequestExtras {\n    /** A string indicating how the request will interact with the browser's cache to set request's cache. */\n    cache?: RequestCache;\n    /** RequestCredentials is a string that specifies how the browser should handle credentials (cookies, HTTP authentication, and client-side SSL certificates) for cross-origin requests.. */\n    // credentials?: RequestCredentials;\n    /** A Headers object, an object literal, or an array of two-item arrays to set request's headers. */\n    headers?: Headers;\n    /** A cryptographic hash of the resource to be fetched by request. Sets request's integrity. */\n    // integrity?: string;\n    /** A boolean to set request's keepalive. */\n    // keepalive?: boolean;\n    /** A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode. */\n    // mode?: RequestMode;\n    // priority?: RequestPriority;\n    /** A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect. */\n    redirect?: RequestRedirect;\n    /** A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer. */\n    // referrer?: string;\n    /** A referrer policy to set request's referrerPolicy. */\n    // referrerPolicy?: ReferrerPolicy;\n    /** An AbortSignal to set request's signal. */\n    signal?: AbortSignal | null;\n}\n\nexport interface ApiErrorResponse {\n    status: number;\n    error_message: string\n}\n\nexport interface ApiErrorEvent {\n    ( context: FrontworkContext, client: FrontworkClient|null, method: \"GET\"|\"POST\", path: string, params: { [key: string]: string|number|boolean | string[]|number[]|boolean[] }, error: ApiErrorResponse ): void\n}\n\nexport enum PageloadType { Serverside, ClientAfterServerside, ClientDefault }\n\nconst client_observers: {[key: string]: Observer<any>} = {};\n\nexport class FrontworkContext {\n    readonly platform: EnvironmentPlatform;\n    readonly stage: EnvironmentStage;\n    readonly client_ip: string; // For Deno side use only. On Client side it will be always 127.0.0.1\n    readonly api_protocol_address: string; // API Address Browser should use\n    readonly api_protocol_address_ssr: string; // API Address Deno should use\n    readonly i18n: I18n;\n    readonly request: FrontworkRequest;\n    readonly do_building: boolean;\n\n    readonly document_html: HTMLHtmlElement;\n    readonly document_head: HTMLHeadElement;\n    readonly document_body: HTMLBodyElement;\n\n    private api_error_event: ApiErrorEvent;\n    private client: FrontworkClient|null;\n\n    /**\n     * Set-Cookie headers for deno side rendering. Deno should retrieve Cookies from the API and pass them to the browser. Should not be used to manually set Cookies. Use the FrontworkResponse.set_cookie method instead\n     */\n    set_cookies: string[] = [];\n    selected_locale: I18nLocale;\n\n    constructor(platform: EnvironmentPlatform, stage: EnvironmentStage, client_ip: string, api_protocol_address: string, api_protocol_address_ssr: string, api_error_event: ApiErrorEvent, i18n: I18n, request: FrontworkRequest, do_building: boolean, client: FrontworkClient|null) {\n        this.platform = platform;\n        this.stage = stage;\n        this.client_ip = client_ip;\n        this.api_protocol_address = api_protocol_address;\n        this.api_protocol_address_ssr = api_protocol_address_ssr;\n        this.api_error_event = api_error_event;\n        this.request = request;\n        this.do_building = do_building;\n        this.client = client;\n\n        this.document_html = document.createElement(\"html\");\n        this.document_head = this.document_html.appendChild( document.createElement(\"head\") );\n        this.document_body = this.document_html.appendChild( document.createElement(\"body\") );\n        \n        // I18n\n        if(i18n.length === 0) throw new Error(\"I18n: No locales provided\");\n        this.i18n = i18n;\n        this.selected_locale = i18n[0];\n    }\n\n    set_locale(locale: string) {\n        if(FW.verbose_logging) FW.reporter(LogType.Info, \"I18n\", \"    Setting locale to \\\"\" + locale + \"\\\"\", null, null);\n        const locale_found = this.i18n.find(l => l.locale === locale);\n\n        if(locale_found === undefined) {\n            FW.reporter(LogType.Error, \"I18n\", \"Locale '\"+locale+\"' does not exist\", null, null);\n            return false;\n        }\n        \n        this.selected_locale = locale_found;\n        return true;\n    }\n\n    get_translation(key: string): string {\n        return this.selected_locale.get_translation(key);\n    }\n\n    get_translation_replace(key: string, search: string, replace: string): string {\n        return this.selected_locale.get_translation(key).split(search).join(replace);\n    }\n\n    get_translation_replace_number(key: string, search: string, number: number): string {\n        if (number === 1) return this.selected_locale.get_translation(key+\"_one\");\n        return this.selected_locale.get_translation(key).split(search).join(number.toString());\n    }\n\n\n    private readonly server_observers: {[key: string]: Observer<any>} = {};\n\n    get_observer<T>(key: string): Observer<T> {\n        if (FW.is_client_side) {\n            // Client: Reuse existing observer or create new one\n            if (!client_observers[key]) {\n                client_observers[key] = new Observer<T>();\n            }\n            return client_observers[key];\n        } else {\n            // Deno Server: Reuse existing observer or create new one\n            if (!this.server_observers[key]) {\n                this.server_observers[key] = new Observer<T>();\n            }\n            return this.server_observers[key];\n        }\n    }\n\n\n    /**\n     * Creates an HTML element. DOES NOT CHECK IF ALREADY EXIST.\n     * @param tag The tag name of the element to create.\n     * @param attributes Optional. Attributes will be only added if it is created. Example: { class: \"container\", \"data-role\": \"content\" }\n     * @returns HTMLElementWrapper\n     */\n    create_element<K extends keyof HTMLElementTagNameMap>(tag: K, attributes?: { [key: string]: string }): HTMLElementWrapper<HTMLElementTagNameMap[K]> {\n        const elem = document.createElement(tag);\n        if (attributes) {\n            for (const key in attributes) {\n                elem.setAttribute(key, attributes[key]);\n            }\n        }\n        return new HTMLElementWrapper(elem, true);\n    }\n\n    /**\n     * Creates a new element and appends I18n text. DOES NOT CHECK IF ALREADY EXIST.\n     * @param tag The tag name of the element to create.\n     * @param i18n_key The keyword specified in the english.json. Uses innerText to set the translated text.\n     * @param attributes Optional. Attributes will be only added if it is created. Example: { class: \"container\", \"data-role\": \"content\" }\n     * @returns HTMLElementWrapper\n     */\n    create_text_element<K extends keyof HTMLElementTagNameMap>(tag: K, i18n_key: string, attributes?: { [key: string]: string }): HTMLElementWrapper<HTMLElementTagNameMap[K]> {\n        const elem = document.createElement(tag);\n        elem.innerText = this.get_translation(i18n_key);\n        if (attributes) {\n            for (const key in attributes) {\n                elem.setAttribute(key, attributes[key]);\n            }\n        }\n        return new HTMLElementWrapper(elem, true);\n    }\n\n    /**\n     * Ensures the existence of an HTML element by ID. Creates a new element if it doesn't exist.\n     * @param tag The tag name of the element to create if it doesn't exist.\n     * @param id The ID of the element to search for or create. Must be unique!\n     * @param attributes Optional. Attributes will be only added if it is created. Example: { class: \"container\", \"data-role\": \"content\" }\n     * @returns The HTML element with the specified ID.\n     */\n    ensure_element<K extends keyof HTMLElementTagNameMap>(tag: K, id: string, attributes?: { [key: string]: string }): HTMLElementWrapper<HTMLElementTagNameMap[K]> {\n        const elem = this.do_building? this.document_html.querySelector(\"#\"+id) : document.getElementById(id);\n        if(elem !== null) return new HTMLElementWrapper<HTMLElementTagNameMap[K]>(elem as HTMLElementTagNameMap[K], false);\n        \n        const elem2 = document.createElement(tag);\n        elem2.id = id;\n        if (attributes) {\n            for (const key in attributes) {\n                elem2.setAttribute(key, attributes[key]);\n            }\n        }\n        return new HTMLElementWrapper(elem2, true);\n    }\n\n    /**\n     * Ensures the existence of an HTML element by ID. Creates a new element and appends I18n text if it doesn't exist\n     * @param tag The tag name of the element.\n     * @param id The ID of the element to search for or create. Must be unique!\n     * @param text The text content of the element.     \n     * @param attributes Optional. Example: { class: \"container\", \"data-role\": \"content\" }\n     * @returns The newly created HTML element.\n     */\n    ensure_text_element<K extends keyof HTMLElementTagNameMap>(tag: K, id: string, attributes?: { [key: string]: string }): HTMLElementWrapper<HTMLElementTagNameMap[K]> {\n        const elem = this.do_building? this.document_html.querySelector(\"#\"+id) : document.getElementById(id);\n        if(elem !== null) return new HTMLElementWrapper<HTMLElementTagNameMap[K]>(elem as HTMLElementTagNameMap[K], false);\n        \n        const elem2 = document.createElement(tag);\n        elem2.id = id;\n        elem2.innerText = this.get_translation(id);\n        if (attributes) {\n            for (const key in attributes) {\n                elem2.setAttribute(key, attributes[key]);\n            }\n        }\n        return new HTMLElementWrapper(elem2, true);\n    }\n\n\n    async api_request<T>(method: \"GET\"|\"POST\", path: string, params: { [key: string]: string|number|boolean | string[]|number[]|boolean[] }, extras: ApiRequestExtras = {}): Promise<Result<T, ApiErrorResponse>> {\n        let url = (FW.is_client_side? this.api_protocol_address : this.api_protocol_address_ssr) + path;\n        \n        // Prepare request options\n        const options: RequestInit = extras; \n        options.method = method;\n        options.headers = extras.headers? extras.headers : new Headers();\n        \n        // Add parameters\n        let params_string = \"\";\n        const params_array = Object.entries(params);\n        if(params_array.length > 0) {\n            params_string += params_array[0][0]+\"=\"+ params_array[0][1];\n            for (let a = 1; a < params_array.length; a++) {\n                params_string += \"&\"+params_array[a][0]+\"=\"+ params_array[a][1];\n            }\n        }\n\n        if (method === \"GET\") {\n            if(params_string.length > 0) url += \"?\"+params_string;\n        } else {\n            options.body = params_string;\n            options.headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        }\n        \n        \n        if (!FW.is_client_side) {\n            // Deno should pass Cookies from the browser to the API\n            let cookies_string = \"\";\n            this.request.COOKIES.forEach((key, name) => {\n                cookies_string += key+\"=\"+name+\"; \";\n            });\n            options.headers.set(\"Cookie\", cookies_string);\n\n            // Deno should pass the browser IP to the API\n            options.headers.set(\"X-Forwarded-For\", this.client_ip);\n        }\n\n        try {\n            const response = await fetch(url, options);\n            \n            // retrieve set-cookie headers from the API and pass them to the browser\n            if (!FW.is_client_side) {\n                const set_cookies = response.headers.getSetCookie();\n                set_cookies.forEach(item => this.set_cookies.push(item));\n            }\n            \n            if (!response.ok) {\n                FW.reporter(LogType.Error, \"api_request\", \"ERROR executing api_request( \"+method+\" \"+path+\" )\", this, null);\n                console.error(response);\n                \n                \n                try {\n                    let api_error_response: ApiErrorResponse = await response.json();\n                    api_error_response.status = response.status;\n                    this.api_error_event(this, this.client, method, path, params, api_error_response);\n    \n                    return {\n                        ok: false,\n                        err: api_error_response\n                    };\n                } catch (error: any) {\n                    FW.reporter(LogType.Error, \"api_request\", \"Could not parse ApiErrorResponse for api_request(\"+method+\" \"+path+\")\", this, error);\n                    let api_error_response: ApiErrorResponse = { status: 501, error_message: \"API did not returned parsable JSON\" }\n                    this.api_error_event(this, this.client, method, path, params, api_error_response);\n\n                    return {\n                        ok: false,\n                        err: api_error_response\n                    };\n                }\n        \n            }\n        \n            const data = await response.json();\n            return {\n                ok: true,\n                val: data as T\n            };\n        } catch (error: any) {\n            FW.reporter(LogType.Error, \"api_request\", \"ERROR executing api_request( \"+method+\" \"+path+\" )\", this, error);\n            let api_error_response: ApiErrorResponse = { status: 503, error_message: error }\n            this.api_error_event(this, this.client, method, path, params, api_error_response);\n\n            return {\n                ok: false,\n                err: api_error_response\n            };\n        }\n    }\n\n    /* Set the retriever of an Observer to be a specified api_request */\n    api_request_observer<T>(observer: Observer<T>, method: \"GET\"|\"POST\", path: string, params: { [key: string]: string|number|boolean | string[]|number[]|boolean[] }, extras: ApiRequestExtras = {}): void {\n        const retriever: ObserverRetrieverFunction<T> = async () => {\n            const result = await this.api_request<T>(method, path, params, extras);\n            if (result.ok) {\n                return { ok: true, val: result.val };\n            } else {\n                return { ok: false, err: new Error(result.err.error_message) };\n            }\n        }\n            \n        observer.define_retriever(retriever);\n        observer.renew().catch(_error => {});\n    }\n\n}\n\n\n/**\n *   @param {EnvironmentPlatform} platform - Web, Desktop or Android\n *   @param {EnvironmentStage} stage - Development, Staging or Production\n *   @param {number} port - Which port should Deno start the webservice\n *   @param {string} api_protocol_address - The protocol and address for FrontworkContext.api_request. Example: http://localhost:40201. Should use https for staging and production. \n *   @param {DomainToRouteSelector[]} domain_to_route_selector - Function that selects which routes should work under a domain \n *   @param {FrontworkMiddleware} middleware - Handler for every edge case like 404er, 500er. You can also execute code before a route executes.\n *   @param {i18n} I18n - Prepare always translations before hand to save time later. For every static string please use the context.get_translation() method.\n *   @param {boolean} build_on_page_load - Enable or Disable Client-Side-Rendering on DOM Ready\n */\nexport interface FrontworkInit {\n    platform: EnvironmentPlatform, stage: EnvironmentStage, port: number, api_protocol_address: string, api_protocol_address_ssr: string, \n    domain_to_route_selector: DomainToRouteSelector, middleware: FrontworkMiddleware, i18n: I18n, build_on_page_load: boolean, api_error_event?: ApiErrorEvent;\n}\n\nexport class Frontwork {\n    protected platform: EnvironmentPlatform;\n    protected stage: EnvironmentStage\n    protected port: number;\n    protected api_protocol_address: string;\n    protected api_protocol_address_ssr: string;\n\tprotected domain_to_route_selector: DomainToRouteSelector;\n\tprotected middleware: FrontworkMiddleware;\n    protected i18n: I18n\n    protected api_error_event: ApiErrorEvent;\n\n\tconstructor(init: FrontworkInit) {\n\t\tthis.platform = init.platform;\n\t\tthis.stage = init.stage;\n\t\tthis.port = init.port;\n\t\tthis.api_protocol_address = init.api_protocol_address;\n\t\tthis.api_protocol_address_ssr = init.api_protocol_address_ssr;\n\t\tthis.domain_to_route_selector = init.domain_to_route_selector;\n\t\tthis.middleware = init.middleware;\n\t\tthis.i18n = init.i18n;\n\t\tthis.api_error_event = init.api_error_event === undefined? ()=>{} : init.api_error_event;\n        if(this.stage === EnvironmentStage.Development) FW.verbose_logging = true;\n\t}\n\n    protected async route_resolver(context: FrontworkContext): Promise<Route | null> {\n        const routes = await this.domain_to_route_selector(context);\n        const request_dirs = context.request.path_dirs;\n    \n        for (let r = 0; r < routes.length; r++) {\n            const route = routes[r];\n            const route_dirs = route.path.split(\"/\");\n            let matches = true;\n    \n            for (let i = 0; i < Math.max(route_dirs.length, request_dirs.length); i++) {\n                // If we hit ** in route, it's a match (remaining path is caught by **)\n                if (route_dirs[i] === \"**\") {\n                    if(FW.verbose_logging) context.request.log(\"ROUTE #\" + route.id + \" (\"+route.path+\")\", context);\n                    return route;\n                }\n    \n                // If either path ends and the other doesn't (and we haven't hit **), no match\n                if (i >= route_dirs.length || i >= request_dirs.length) {\n                    matches = false;\n                    break;\n                }\n    \n                // If segment doesn't match and isn't wildcard, no match\n                if (route_dirs[i] !== \"*\" && route_dirs[i] !== request_dirs[i]) {\n                    matches = false;\n                    break;\n                }\n            }\n    \n            if (matches) {\n                if(FW.verbose_logging) context.request.log(\"ROUTE #\" + route.id + \" (\"+route.path+\")\", context);\n                return route;\n            }\n        }\n    \n        return null;\n    }\n\n\tprotected async route_execute_build(context: FrontworkContext, route: Route|null): Promise<{ response: FrontworkResponse; component: Component; }> {\n        // Route\n        if (route) {\n            try {\n                const component = new route.component(context);\n                return { response: await component.build(context), component: component };\n            // deno-lint-ignore no-explicit-any\n            } catch (error: any) {\n                context.request.error(\"ROUTE #\" + route.id + \" (\"+route.path+\")\", context, error);\n                return { response: await this.middleware.error_handler_component.build(context), component: this.middleware.error_handler_component };\n            }\n        }\n\n        // Middleware: Not found\n        if(FW.verbose_logging) context.request.log(\"NOT_FOUND\", context);\n        try {\n            const component = new this.middleware.not_found_handler(context);\n            return { response: await component.build(context), component: component };\n        // deno-lint-ignore no-explicit-any\n        } catch (error: any) {\n            context.request.error(\"NOT_FOUND\", context, error);\n            return { response: await this.middleware.error_handler_component.build(context), component: this.middleware.error_handler_component };\n        }\n\t}\n\n}\n\nexport interface FrontworkMiddlewareInit {\n    error_handler: ErrorHandler;\n\tnot_found_handler: new (context: FrontworkContext) => Component;\n\tbefore_route: BeforeRouteEvent;\n    redirect_lonely_slash?: boolean;\n}\n\nexport class FrontworkMiddleware {\n    protected error_handler: ErrorHandler;\n    /** The error handler should only have a response. The Component is only for internal use. */\n    readonly error_handler_component: Component;\n\treadonly not_found_handler: new (context: FrontworkContext) => Component;\n\treadonly before_route: BeforeRouteEvent;\n    readonly redirect_lonely_slash: boolean;\n\n\tconstructor(init: FrontworkMiddlewareInit) {\n        this.error_handler = init.error_handler\n        this.error_handler_component = {\n            async build(context: FrontworkContext) {\n                context.document_head.innerHTML = \"\";\n                context.document_body.innerHTML = \"\";\n                return init.error_handler(context); \n            },\n            dom_ready() {},\n            on_destroy() {},\n        }\n        this.not_found_handler = init.not_found_handler;\n        this.before_route = init.before_route;\n        this.redirect_lonely_slash = init && init.redirect_lonely_slash? init.redirect_lonely_slash : true;\n\t}\n}\n", "import { Frontwork, FrontworkRequest, PostScope, DocumentBuilder, FrontworkInit, EnvironmentStage, LogType, FW, Route, FrontworkContext, Component } from \"./frontwork.ts\";\nimport { html_element_set_attributes, Observer } from \"./utils.ts\";\n\n\nexport class FrontworkClient extends Frontwork {\n    private build_on_page_load: boolean;\n    private readonly client_observers: {[key: string]: Observer<any>} = {};\n\n    /** page_change() behaviour: \n        It kills the previous Promise so that it will not execute its Component build function since it is not needed because the user already clicked to the next page.\n        But we should wait for page_change_form because we want ensure that the data is transmitted. */\n    private page_change_ready = true;\n    private page_change_previous_abort_controller: AbortController|null = null;\n    public is_page_change_ready(): boolean { return this.page_change_ready }\n    previous_component: Component|null = null;\n    previous_context: FrontworkContext|null = null;\n\n    private get_headers(): Headers {\n        return new Headers([[\"Cookie\", document.cookie]]);\n    }\n\n    constructor(init: FrontworkInit) {\n        super(init);\n\n        if (typeof init.build_on_page_load === \"boolean\") this.build_on_page_load = init.build_on_page_load;\n        else this.build_on_page_load = false;\n\n        // DOM Ready\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            const request = new FrontworkRequest(\"GET\", location.toString(), this.get_headers(), new PostScope({}));\n            this.page_change(request, this.build_on_page_load, false);\n        });\n\n        // add event listener for page change on link click\n        document.addEventListener('click', (event) => {\n            const target = event.target as HTMLAnchorElement;\n            if (target.href === \"\") {\n                // do nothing on empty href\n                event.preventDefault();\n            } else if (target.tagName === 'A' && (target.target === \"\" || target.target === \"_self\")) {\n                // Create a URL object to easily access hostname\n                const url = new URL(target.href);\n                \n                // Check if hostname exists and is different from current hostname\n                if (url.hostname !== '' && url.hostname !== window.location.hostname) {\n                    // External link - let it proceed normally\n                    return;\n                }\n                \n                event.preventDefault();\n\n                if (this.page_change_ready) {\n                    this.page_change_to(target.href, false);\n                }\n            }\n        }, false);\n\n        // FrontworkForm halt sending data to the server and let the client handle it instead\n        document.addEventListener('submit', async (event) => {\n            const target = event.target as HTMLFormElement;\n            \n            if (target.tagName === \"FORM\" && target.getAttribute(\"fw-form\") !== null) {\n                // Prevent the form from submitting\n                event.preventDefault();\n\n                if (target.ariaDisabled === \"true\") {\n                    console.log(\"fw-form is ariaDisabled. Because it already has been submitted.\", target);\n                } else {\n                    target.ariaDisabled = \"true\";\n                    \n                    let submit_button = event.submitter as HTMLButtonElement|null;\n                    submit_button = submit_button && submit_button.name? submit_button : null;\n                    \n                    const result = await this.page_change_form(target, submit_button);\n                    console.log(\"page_change_form result\", result);\n                    target.ariaDisabled = \"false\";\n                }\n            }\n        });\n\n        // PopState Event: history back/forward; this event is needed to update the content\n        addEventListener('popstate', (event) => {\n            if (this.page_change_ready) {\n                // validate event.state; it could be a different value if the state has been set by another script\n                const savestate: PageChangeSavestate = event.state;\n                if (savestate && savestate.url) {\n                    const request = new FrontworkRequest(\"GET\", savestate.url, this.get_headers(), new PostScope({}));\n                    this.page_change(request, true, true);\n                }\n            } else {\n                // Page is still processing form data. Prevent go back/forward\n                history.pushState(null, \"\", window.location.pathname);\n            }\n        });\n\n        // websocket for hot-reload check\n        if (this.stage === EnvironmentStage.Development) {\n            console.info(\"hot-reloading is enabled; Make sure this is the development environment\");\n            // location.reload() after noticing the disconnect and reconnect is successful\n            let state = 0;\n\n            const connect = () => {\n                const ws = new WebSocket(\"ws://\"+location.host+\"//ws\");\n                ws.onopen = function() {\n                    ws.send(\"REQUEST::SERVICE_STARTED\");\n\n                    if (state === 2) {\n                        location.reload();\n                    } else {\n                        state = 1;\n                    }\n                };\n              \n                ws.onclose = function() {\n                    state = 2;\n                    setTimeout(connect, 1000);\n                };\n              \n                ws.onerror = function() {\n                    ws.close();\n                };\n              }\n              \n              connect();\n              \n        }\n    }\n\n    \n    private async page_change(request: FrontworkRequest, do_building: boolean, ignore_not_ready: boolean): Promise<PageChangeSavestate | null> {\n        if (this.page_change_ready || ignore_not_ready) {\n            if (this.page_change_previous_abort_controller !== null) {\n                this.page_change_previous_abort_controller.abort();\n            }\n            const abort_controller = new AbortController();\n            this.page_change_previous_abort_controller = abort_controller;\n\n            // Page changed, so we trigger the on_destroy method from the previous route. Uses the context of the previous component.\n            if(this.previous_component !== null && this.previous_context !== null ) await this.previous_component.on_destroy(this.previous_context, this);\n\n            const context = new FrontworkContext(this.platform, this.stage, \"127.0.0.1\", this.api_protocol_address, this.api_protocol_address_ssr, this.api_error_event, this.i18n, request, do_building, this);\n            this.previous_context = context;\n            let route;\n            try {\n                route = await this.route_resolver(context);\n            // deno-lint-ignore no-explicit-any\n            } catch (error: any) {\n                context.request.error(\"ERROR in route_resolver\", context, error);\n                return null;\n            }\n            \n            \n            // Middleware: before Route\n            try {\n                this.middleware.before_route.build(context);\n                this.middleware.before_route.dom_ready(context, this);\n            // deno-lint-ignore no-explicit-any\n            } catch (error: any) {\n                context.request.error(\"before_route\", context, error);\n            }\n\n\n            if (do_building) {\n                const reb_result = await this.route_execute_build(context, route);\n                if (abort_controller.signal.aborted) {\n                    this.page_change_ready = true;\n                    return null;\n                }\n                \n                for (let i = 0; i < reb_result.response.cookies.length; i++) {\n                    const cookie = reb_result.response.cookies[i];\n                    if (cookie.http_only === false) {\n                        document.cookie = cookie.toString();\n                    }\n                }\n\n                if (reb_result.response.status_code === 301 || reb_result.response.status_code === 302) {\n                    // redirect\n                    const redirect_url = reb_result.response.get_header(\"Location\");\n                    if (redirect_url === null) {\n                        FW.reporter(LogType.Error, \"REDIRECT\", \"Tried to redirect: Status Code is 301, but Location header is null\", context, null);\n                        this.page_change_ready = true;\n                        return null;\n                    } else {\n                        if(FW.verbose_logging) FW.reporter(LogType.Info, \"REDIRECT\", \"Redirect to: \" + redirect_url, context, null);\n                        this.page_change_to(redirect_url, true);\n                        this.page_change_ready = true;\n                        return { method: request.method, url: context.request.url, is_redirect: true, status_code: reb_result.response.status_code };\n                    }\n                }\n        \n\n                const resolved_content = <DocumentBuilder> reb_result.response.content;\n                if (typeof resolved_content.context.document_html !== \"undefined\") {\n                    resolved_content.html();\n\n                    html_element_set_attributes(document.children[0] as HTMLElement, resolved_content.context.document_html.attributes);\n                    html_element_set_attributes(document.head, resolved_content.context.document_head.attributes);\n                    document.head.innerHTML = resolved_content.context.document_head.innerHTML;\n\n                    const html = document.body.parentElement;\n                    if(document.body !== null) document.body.remove();\n\n                    // Add all elements except script to the body\n                    if(html !== null) {\n                        for (let i = 0; i < context.document_body.children.length; i++) {\n                            const child = context.document_body.children[i];\n                            if (child.tagName === \"SCRIPT\") {\n                                child.remove();\n                            }\n                        }\n                        html.append(context.document_body);\n                    }\n                    \n                    reb_result.component.dom_ready(context, this);\n                    this.previous_component = reb_result.component;\n                    this.page_change_ready = true;\n                    return { method: request.method, url: request.url, is_redirect: false, status_code: reb_result.response.status_code };\n                }\n            } else {\n                if (route !== null) {\n                    const route_component = new route.component(context);\n                    route_component.dom_ready(context, this);\n                    this.previous_component = route_component;\n                } else {\n                    const not_found_component = new this.middleware.not_found_handler(context);\n                    not_found_component.dom_ready(context, this);\n                    this.previous_component = not_found_component;\n                }\n            }\n\n            this.page_change_ready = true;\n        }\n\n        return null;\n    }\n    \n    // function replacement for window.location; accessible for the Component method dom_ready */\n    public async page_change_to(url_or_path: string, ignore_not_ready?: boolean) {\n        if(FW.verbose_logging) FW.reporter(LogType.Info, \"PageChange\", \"    page_change_to: \" + url_or_path, null, null);\n        let url;\n        const test = url_or_path.indexOf(\"//\");\n        if (test === 0 || test === 5 || test === 6) { // if \"//\" OR \"http://\" OR \"https://\"\n            url = url_or_path\n        } else {\n            url = location.protocol+\"//\"+location.host+url_or_path\n        }\n\n        const request = new FrontworkRequest(\"GET\", url, this.get_headers(), new PostScope({}));\n        const result = await this.page_change(request, true, ignore_not_ready === true);\n        if(result !== null) {\n            if(result.is_redirect) return true;\n            history.pushState(result, document.title, url);\n            return true;\n        }\n        return false;\n    }\n    \n    /** function to handle Form submits being handled in client */\n    public async page_change_form(form: HTMLFormElement, submit_button: HTMLButtonElement|null): Promise<boolean> {\n        this.page_change_ready = false;\n        if(FW.verbose_logging) FW.reporter(LogType.Info, \"PageChange\", \"page_change_form\", null, null);\n        let method = form.getAttribute(\"method\");\n        if(method === null) method = \"POST\";// In Web Browsers, if a form's method attribute is empty, it defaults to \"POST\".\n        const IS_METHOD_GET = method === \"GET\";\n        if(submit_button) submit_button.disabled = true;\n        \n        let url: string;\n        const action = form.getAttribute(\"action\");\n        if (action === \"\") {\n            if (this.previous_context) {\n                if (IS_METHOD_GET) {\n                    url = this.previous_context.request.protocol+\"//\"+this.previous_context.request.host+this.previous_context.request.path;\n                } else {\n                    url = this.previous_context.request.url;\n                }\n            } else {\n                url = location.protocol+\"//\"+location.host+window.location.pathname.toString();\n                if (IS_METHOD_GET && location.search !== \"\") url += location.search;\n            }\n        } else {\n            url = location.protocol+\"//\"+location.host+action;\n        }\n\n        // Delete lonely slash\n        if (this.middleware.redirect_lonely_slash && url.substring(url.length-1) === \"/\") {\n            url = url.substring(0, url.length-1);\n        }\n\n        // Get FormData from form\n        const form_data = new FormData(form);\n        \n        const POST = new PostScope({});\n        if (IS_METHOD_GET) {\n            let first = true;\n            form_data.forEach((value, key) => {\n                if (first) {\n                    first = false;\n                    url += \"?\";\n                } else {\n                    url += \"&\";\n                }\n                url += key+\"=\"+encodeURIComponent(value.toString());\n            });\n\n            // Include submit button name and value\n            if (submit_button !== null) {\n                url += (first? \"?\" : \"&\") + submit_button.name+\"=\"+submit_button.value;\n            }\n        } else {\n            form_data.forEach((value, key) => POST.items[key] = value.toString());\n            // Include submit button name and value\n            if (submit_button !== null) {\n                POST.items[submit_button.name] = submit_button.value;\n            }\n        }\n\n        const request = new FrontworkRequest(method, url, this.get_headers(), POST);\n        const result = await this.page_change(request, true, true);\n        console.log(\"page_change_form result inner\", result);\n        \n        if(result !== null) {\n            if(result.is_redirect) return true;\n            history.pushState(result, document.title, url);\n            return true;\n        }\n\n        if(submit_button) submit_button.disabled = true;\n        return false;\n    }\n\n    public refresh() {\n        return this.page_change_to(window.location.toString(), true);\n    }\n}\n\n\nclass PageChangeSavestate {\n    method: string;\n    url: string;\n    is_redirect: boolean;\n    status_code: number;\n    constructor(method: string, url: string, is_redirect: boolean, status_code: number) {\n        this.method = method;\n        this.url = url;\n        this.is_redirect = is_redirect;\n        this.status_code = status_code;\n    }\n}", "{\n     \"title1\": \"Frontwork Test Page\"\n    ,\"text1\": \"This is a test page for the Frontwork framework.\"\n    ,\"title2\": \"Test Form\"\n    ,\"test-page2\": \"Test Page 2\"\n    ,\"another_title1\": \"Hello from 127.0.0.1\"\n    ,\"another_text1\": \"Yes you can have different domains :)\"\n\n    ,\"a-home\": \"Home\"\n    ,\"a-test2\": \"Test2\"\n    ,\"a-test3\": \"Test3\"\n    ,\"a-german\": \"German\"\n    ,\"a-crash\": \"Crash\"\n\n    ,\"event_button_tester\": \"Event Button Tester\"\n\n    ,\"formtest_title_fail\": \"This form test was sent to the Deno server!\"\n    ,\"formtest_title_ok\": \"This form test was not sent to the Deno server :)\"\n    ,\"submit_button\": \"Submit\"\n\n}", "{\n    \"title1\": \"Frontwork Test Seite\"\n   ,\"text1\": \"Dies ist eine deutsche Test Seite f\u00FCr das Frontwork framework.\"\n   ,\"title2\": \"Test Formular\"\n\n   ,\"a-home\": \"Startseite\"\n    ,\"a-test2\": \"Testseite2\"\n    ,\"a-test3\": \"Testseite3\"\n    ,\"a-german\": \"Deutsch\"\n    ,\"a-crash\": \"Absturz\"\n\n    ,\"event_button_tester\": \"Ereignistastentester\"\n\n    ,\"formtest_title_fail\": \"Dieser Formtest wurde an den Deno Server gesendet!\"\n    ,\"formtest_title_ok\": \"Dieser Formtest wurde nicht an den Deno Server gesendet :)\"\n    ,\"submit_button\": \"Senden\"\n}", "import { I18n, I18nLocale, I18nLocaleTranslation } from \"../frontwork.ts\";\nimport { default as english } from \"./i18n/english.json\" with { type: \"json\" };\nimport { default as german } from \"./i18n/german.json\" with { type: \"json\" };\n\nexport const i18n: I18n = [\n    new I18nLocale(\"en\", english as I18nLocaleTranslation),\n    new I18nLocale(\"de\", german as I18nLocaleTranslation),\n];", "// deno-lint-ignore-file no-unused-vars\nimport { Component, Route, FrontworkMiddleware, FrontworkResponse, DocumentBuilder, FrontworkResponseRedirect, FrontworkContext, FrontworkInit, EnvironmentPlatform, EnvironmentStage, FW, LogType, HTMLElementWrapper, FrontworkForm, ApiErrorResponse } from \"../frontwork.ts\";\nimport { FrontworkClient } from \"../frontwork-client.ts\";\nimport { i18n } from \"./test.i18n.ts\";\n\n\nclass MyMainDocumentBuilder extends DocumentBuilder {\n\tmain: HTMLElementWrapper<HTMLElement>;\n\n\tconstructor(context: FrontworkContext) {\n\t\tsuper(context);\n\t\tconst header = this.body_append( context.create_element(\"header\") );\n\t\tcontext.ensure_text_element(\"a\", \"a-home\", { href: \"/\" }).append_to(header);\n\t\tcontext.ensure_text_element(\"a\", \"a-test2\",{ href: \"/test2\" }).append_to(header);\n\t\tcontext.ensure_text_element(\"a\", \"a-test3\",{ href: \"/test3\" }).append_to(header);\n\t\tcontext.ensure_text_element(\"a\", \"a-german\", { href: \"/german\" }).append_to(header);\n\t\tcontext.ensure_text_element(\"a\", \"a-crash\", { href: \"/crash\" }).append_to(header);\n\t\tthis.main = this.body_append(context.create_element(\"main\"));\n\t}\n}\n\n\nclass AnotherComponent implements Component {\n    async build(context: FrontworkContext): Promise<FrontworkResponse> {\n\t\tconst document_builder = new DocumentBuilder(context);\n\t\tconst main = document_builder.body_append( context.create_element(\"main\") );\n\t\tcontext.ensure_text_element(\"h1\", \"another_title1\").append_to(main);\n\t\tcontext.ensure_text_element(\"p\", \"another_text1\").append_to(main);\n\t\treturn new FrontworkResponse(200, document_builder);\n\t}\n    async dom_ready() {}\n    async on_destroy() {}\n}\n\nclass TestComponent implements Component {\n\tbutton_event: HTMLElementWrapper<HTMLButtonElement>;\n\t\n\tconstructor(context: FrontworkContext) {\n\t\tthis.button_event = context.ensure_text_element(\"button\", \"event_button_tester\", { type: \"button\" });\n\t}\n\n    async build(context: FrontworkContext) {\n\t\tconst user = await context.get_observer<User>(\"user\").get();\n\t\tconsole.log(\"The User is\", user);\n\t\t\n\n\t\tconst document_builder = new MyMainDocumentBuilder(context);\n\n\t\tconst title = context.ensure_text_element(\"h1\", \"title1\").append_to(document_builder.main)\n\t\tconst description = context.ensure_text_element(\"p\", \"text1\").append_to(document_builder.main)\n\t\t\n\t\tthis.button_event.append_to(document_builder.main);\n\t\t\n\t\tconst section = context.create_element(\"section\").append_to(document_builder.main);\n\t\tcontext.ensure_text_element(\"h2\", \"title2\").append_to(section);\n\n\t\t// Test forms\n\t\tconst action = context.request.GET.get(\"action\");\n\t\tif (action !== null) {\n\t\t\tcontext.ensure_text_element(\"h3\", \"formtest_title_\"+(FW.is_client_side? \"ok\" : \"fail\")).append_to(section);\n\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\tconst div = context.create_element(\"div\").append_to(section);\n\t\t\t\tdiv.element.innerHTML = \"text\"+i+\": \"+context.request.GET.get(\"text\"+i);\n\t\t\t}\n\n\t\t}\n\n\t\tconst form = new FrontworkForm(context, \"test_form\", \"\", \"GET\").append_to(section);\n\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tcontext.ensure_element(\"input\", \"input\"+i, { type: \"text\", name: \"text\"+i, value: \"asdsad\"+i }).append_to(form);\n\t\t}\n\t\t\n\t\tcontext.ensure_text_element(\"button\", \"submit_button\", { type: \"submit\", name: \"action\", value: \"sent\" }).append_to(form);\n\n\t\treturn new FrontworkResponse(200, \n\t\t\tdocument_builder\n\t\t\t\t.add_head_meta_data(title.element.innerText, description.element.innerText, \"noindex,nofollow\")\n\t\t);\n\t}\n\t\n    async dom_ready(context: FrontworkContext, client: FrontworkClient) {\n\t\ttry {\n\t\t\tlet times = 0;\n\t\t\tthis.button_event.element.addEventListener(\"click\", () => {\n\t\t\t\ttimes++;\n\t\t\t\tthis.button_event.element.innerHTML = \"Changed \"+times+\" times\";\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\tasync on_destroy() {}\n}\n\nclass TestGerman extends TestComponent {\n    constructor(context: FrontworkContext) {\n\t\tcontext.set_locale(\"de\");\n\t\tsuper(context);\n\t}\n    override async build(context: FrontworkContext) {\n\t\treturn await super.build(context);\n\t}\n    override async dom_ready(context: FrontworkContext, client: FrontworkClient) { super.dom_ready(context, client); }\n}\n\nclass Test2Component implements Component {\n    async build(context: FrontworkContext) {\n\t\tconst document_builder = new MyMainDocumentBuilder(context);\n\n\t\tconst title1 = context.ensure_text_element(\"h1\", \"test-page2\").append_to(document_builder.main);\n\t\tconst description = context.ensure_element(\"p\", \"description\").append_to(document_builder.main);\n\t\tdescription.element.innerHTML = \"This is a test page <b>2</b> for the Frontwork framework. I will redirect you with js to the home page in 1 second.\";\n\t\t\n\t\tFW.reporter(LogType.Warn, \"TEST\", \"Warn counter test for Testworker\", context, null);\n\t\treturn new FrontworkResponse(200, \n\t\t\tdocument_builder\n\t\t\t\t.add_head_meta_data(title1.element.innerText, description.element.innerText, \"noindex,nofollow\")\n\t\t);\n\t}\n    async dom_ready(context: FrontworkContext, client: FrontworkClient) {\n\t\tsetTimeout(() => {\n\t\t\tclient.page_change_to(\"/\", false);\n\t\t}, 1000);\n\t}\n\tasync on_destroy() {console.log(\"on_destroy test\");}\n}\n\nclass Test3Component implements Component {\n    async build() {\n\t\treturn new FrontworkResponseRedirect(\"/\", 301);\n\t}\n    async dom_ready() {}\n\tasync on_destroy() {}\n}\n\n\nclass ElementTestComponent implements Component {\n    async build(context: FrontworkContext) {\n\t\tconst document_builder = new MyMainDocumentBuilder(context);\n\t\treturn new FrontworkResponse(200, \n\t\t\tdocument_builder\n\t\t\t\t.add_head_meta_data(\"element_test\", \"element_test\", \"noindex,nofollow\")\n\t\t);\n\t}\n    async dom_ready() {}\n\tasync on_destroy() {}\n}\n\nclass HelloWorldPrioTestComponent implements Component {\n    async build(context: FrontworkContext) {\n\t\tconst content = \"Hello this is indeed first come, first served basis\";\n\t\treturn new FrontworkResponse(200, content);\n\t}\n    async dom_ready(context: FrontworkContext) {}\n\tasync on_destroy() {}\n}\n\nclass HelloWorldComponent implements Component {\n    async build(context: FrontworkContext) {\n\t\tconst content = \"Hello \"+context.request.path_dirs[2];\n\t\treturn new FrontworkResponse(200, content);\n\t}\n    async dom_ready(context: FrontworkContext) {}\n    async on_destroy(context: FrontworkContext) {}\n}\n\nclass CollisionHandlerComponent implements Component {\n\tcomponent: Component\n\n\tconstructor(context: FrontworkContext) {\n\t\tif (context.request.path_dirs[2] === \"first-come-first-served\") {\n\t\t\tthis.component = new HelloWorldPrioTestComponent();\n\t\t}\n\t\tthis.component = new HelloWorldComponent();\n\t}\n\n    async build(context: FrontworkContext) {\n\t\treturn this.component.build(context);\n\t}\n    async dom_ready(context: FrontworkContext, client: FrontworkClient) {\n\t\treturn this.component.dom_ready(context, client);\n\t}\n\tasync on_destroy() {}\n}\n\nclass CrashComponent implements Component {\n    async build() {\n\t\tthrow new Error(\"Crash Test\");\n\t\t// deno-lint-ignore no-unreachable\n\t\treturn new FrontworkResponse(200, \"this text shall never be seen in the browser\");\n\t}\n    async dom_ready() {}\n\tasync on_destroy() {}\n}\n\nclass NotFoundComponent implements Component {\n    async build(context: FrontworkContext) {\n\t\tconst document_builder = new MyMainDocumentBuilder(context);\n\t\tconst h1 = context.document_body.appendChild(document.createElement(\"h1\"));\n\t\th1.innerText = \"ERROR 404 - Not found\";\n\n\t\treturn new FrontworkResponse(404,\n\t\t\tdocument_builder\n\t\t\t\t.add_head_meta_data(h1.innerText, h1.innerText, \"noindex,nofollow\")\n\t\t);\n\t}\n    async dom_ready() {}\n\tasync on_destroy() {}\n}\n\nconst default_routes: Route[] = [\n\tnew Route(\"/\", TestComponent),\n\tnew Route(\"/test2\", Test2Component),\n\tnew Route(\"/test3\", Test3Component),\n\tnew Route(\"/german\", TestGerman),\n\tnew Route(\"/crash\", CrashComponent),\n\tnew Route(\"/element_test\", ElementTestComponent),\n\tnew Route(\"/hello/first-come-first-served\", HelloWorldPrioTestComponent),\n\tnew Route(\"/hello/*\", HelloWorldComponent),\n\tnew Route(\"/hi/*\", CollisionHandlerComponent),\n];\n\nconst another_routes: Route[] = [\n\tnew Route(\"/\", AnotherComponent),\n];\n\nexport interface User {\n    user_id: number,\n    username: string,\n    status: number,\n}\n\n\nexport function login_check(context: FrontworkContext): Promise<User> {\n\treturn new Promise(function (resolve, reject) {\n\t\tcontext.api_request<User>(\"POST\", \"/api/v1/account/user\", {})\n\t\t.then(function(result) {\n\t\t\tif (result.ok) {\n\t\t\t\tconsole.log(\"Welcome, \" + result.val.username);\n                resolve(result.val);\n\t\t\t} else {\n\t\t\t\treject(new Error(\"login_check() NON-OK: \"+result.err.status));\n\t\t\t}\n\t\t})\n\t\t.catch(function(err) { reject(err); });\n\t});\n}\n\nconst middleware = new FrontworkMiddleware({\n\tbefore_route: {\n\t\tbuild: async (context: FrontworkContext) => {\n\t\t\tconsole.log(\"context.request.COOKIES\", context.request.COOKIES);\n\t\t\t\n\t\t\tcontext.set_locale(\"en\");\n\t\t\tconst observer = context.get_observer<User>(\"user\");\n\t\t\tif(observer.is_null()) context.api_request_observer<User>(observer, \"POST\", \"/api/v1/account/user\", {});\n\t\t},\n\t\tdom_ready: async () => {  console.log(\"ASDAAAAAAAAA\"); }\n\t},\n\terror_handler: async (context: FrontworkContext) => {\n\t\tconst document_builder = new MyMainDocumentBuilder(context);\n\t\tconst h1 = context.document_body.appendChild(document.createElement(\"h1\"));\n\t\th1.innerText = \"ERROR 500 - Internal server error\";\n\n\t\treturn new FrontworkResponse(500,\n\t\t\tdocument_builder\n\t\t\t\t.add_head_meta_data(h1.innerText, h1.innerText, \"noindex,nofollow\")\n\t\t);\n\t},\n\tnot_found_handler: NotFoundComponent,\n});\n\n\n\nexport const APP_CONFIG: FrontworkInit = {\n\tplatform: EnvironmentPlatform.Web, \n\tstage: EnvironmentStage.Development,\n\tport: 8080,\n\tapi_protocol_address: \"\",\n\tapi_protocol_address_ssr: \"http://localhost:40201\",\n\tdomain_to_route_selector: async (context: FrontworkContext) => {\n\t\tconst domain = context.request.host.split(\":\")[0];\n\t\t\n\t\tif (domain === \"127.0.0.1\") return another_routes;\n\t\treturn default_routes;\n\t},\n\tmiddleware: middleware,\n\ti18n: i18n,\n\tbuild_on_page_load: false,\n\tapi_error_event: (context: FrontworkContext, client: FrontworkClient|null, method: \"GET\"|\"POST\", path: string, params: { [key: string]: string|number|boolean | string[]|number[]|boolean[] }, error: ApiErrorResponse) => {\n\t\tif (context.request.path !== \"/\" && client !== null && error.status === 401) {\n\t\t\tclient.page_change_to(\"/\", true);\n\t\t}\n\t}\n};\n", "import { FrontworkClient } from \"../frontwork-client.ts\";\nimport { APP_CONFIG } from \"./test.routes.ts\";\n\n\nnew FrontworkClient(APP_CONFIG);"],
  "mappings": "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",
  "names": ["i18n"]
}
